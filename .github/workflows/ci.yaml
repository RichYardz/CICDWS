name: Build and Push

on:
  push:
    branches:
      - "release/v[0-9]+.[0-9]+"

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.4

      - name: Aqua Security Trivy
        id: trivy
        uses: aquasecurity/trivy-action@0.19.0
        with:
          scan-type: 'fs'
          ignore-unfixed: true
          format: 'table'
          output: 'trivy-results.table'
          severity: 'CRITICAL'

      - name: Check Trivy results
        id: ifTrivy
        run: |
          trivy_table=$(cat trivy-results.table)
          if [[ -z "$trivy_table" ]]; then
            echo "TRIVY_TABLE_EMPTY=true" >> $GITHUB_OUTPUT
          else
            echo "TRIVY_TABLE_EMPTY=false" >> $GITHUB_OUTPUT
          fi

      - name: Slack notification fail
        if: ${{ steps.ifTrivy.outputs.TRIVY_TABLE_EMPTY == 'false' }}
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_CHANNEL: ${{ secrets.MY_OWN_CID }}
          SLACK_COLOR: '#D00A07'
          SLACK_MESSAGE: 'Failed trivy scan, see uploaded report'
          SLACK_TITLE: 'Scan failed - RichYardz'
          SLACK_WEBHOOK: ${{ secrets.MY_OWN_SLACK }}

      - name: Convert table file to text file
        if: ${{ steps.ifTrivy.outputs.TRIVY_TABLE_EMPTY == 'false' }}
        run: |
          trivy_table=$(cat trivy-results.table)
          echo "$trivy_table" > trivy-results.txt

      - name: Slack post file
        if: ${{ steps.ifTrivy.outputs.TRIVY_TABLE_EMPTY == 'false' }}
        uses: MeilCli/slack-upload-file@v4.0.6
        with:
          slack_token: ${{ secrets.MY_OWN_TOKEN }}
          channel_id: ${{ secrets.MY_OWN_CID }}
          file_path: 'trivy-results.txt'
          initial_comment: 'post by slack-upload-file'

      - name: Terminate pipeline
        if: ${{ steps.ifTrivy.outputs.TRIVY_TABLE_EMPTY == 'false' }}
        run: exit 1

      - name: cosign-installer
        uses: sigstore/cosign-installer@v3.5.0

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Create tag variable
        id: TagVariable
        run: |
          echo "Tag=${{ secrets.DOCKERHUB_USERNAME }}/go-fortune:${{ github.sha }}" >> $GITHUB_OUTPUT

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          file: go-fortune/Dockerfile
          context: go-fortune/
          push: true
          tags: ${{ steps.TagVariable.outputs.Tag }}

      - name: Sign image with a key
        run: |
          images=""
          for tag in ${TAGS}; do
            images+="${tag} "
          done
          cosign sign --yes --key env://COSIGN_PRIVATE_KEY ${images}
        env:
          TAGS: ${{ steps.TagVariable.outputs.Tag }}
          COSIGN_PRIVATE_KEY: ${{ secrets.COSIGN_PRIVATE_KEY }}
          COSIGN_PASSWORD: ${{ secrets.COSIGN_PASSWORD }}

      - name: Slack notification success
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_CHANNEL: ${{ secrets.MY_OWN_CID }}
          SLACK_COLOR: '#22B14C'
          SLACK_MESSAGE: |
            *Name:* Binghao Yan
            *Matriculation:* A0291825X
            *Email:* E1335037@u.nus.edu
            *Git:* http://github.com/${{github.repository}}
          SLACK_TITLE: 'Image build and signed'
          SLACK_WEBHOOK: ${{ secrets.MY_OWN_SLACK }}